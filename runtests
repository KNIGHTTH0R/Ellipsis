#!/usr/bin/php
<?php

include "utils/cli.php";
CLI::process("
    Usage:
        runtests

<<<<<<< HEAD
    Description:
        Run the auto documentation script against this Ellipsis installation and output the results to http://sitename/docs/index.html.
=======
/**
 * collect command-line arguments
 *
 * @param string $app
 * @param string $tests (comma separated)
 * @param string $mock
 * @return void
 */
if (count($argv) >= 2){
    $app   = $argv[1];
    $tests = explode(',', $argv[2]);
    $mock  = (count($argv) >= 4) ? $argv[3] : null;

    // @todo: preload a default mock, before overriding
    //include $base_mock;
    
    // mock a required environment
    if ($mock != null){
        include $mock;
        if(isset($_ENV['MOCK'])){
            print '<pre>' . print_r($_ENV['MOCK'], true) . '</pre>';
            foreach($_ENV['MOCK'] as $key => $val){
                $$key = array_extend($$key, $val);
            }        
        }
    } 
>>>>>>> 1f15a1274d4857142e3582997ccf247af099d107

    Options:
        [-c, --cmd]         Run in command mode (defaults to web mode)
        [-s, --single=APP]  Test a single application (default is all)

    Arguments:
        none
");

// get ready
$base = dirname(__FILE__) . '/wwwroot';
include $base . '/.ellipsis/php.php';

if ($_ENV['opts']['single']){
    // process a single application
    if (is_dir($base . '/.' . $_ENV['opts']['single'])){
        // gather the tests
        if (is_dir($base . '/.' . $_ENV['opts']['single'] . '/tests')){
            $tests = scandir_recursive($base . '/.' . $_ENV['opts']['single'] . '/tests', null, array('.git', '.svn'));
            if ($tests){
                // pretend to be a web environment
                if (!$_ENV['opts']['cmd']) pretend();

                // load simpletest
                require_once('utils/simpletest/unit_tester.php');
                require_once('utils/simpletest/reporter.php');

<<<<<<< HEAD
                // create the test suite
                $suite = new TestSuite($_ENV['opts']['single'] . ' tests');
                foreach($tests as $test){
                    $suite->addFile($test);
                }

                // run the tests
                $suite->run(new TextReporter());
                exit;
            } else {
                // no tests were found
            }
        }
    } else {
        // app was not found
    }
} else {
    // find all applications and recurse them
    $apps = scandir($base . '/');
    foreach($apps as $app){
        if (is_dir($base . '/' . $app)){
            $temp = basename($app);
            if (preg_match('/^\.([a-z0-9_-]+)$/', $temp) && !in_array($temp, array('.', '..', '.cached'))){
                echo ">>$temp\n";
                $result = system('./runtests ' . ($_ENV['opts']['cmd'] ? '-c ' : '') . '-s ' . substr(basename($app), 1));
            }
        }
=======
        // execute test
        chdir(dirname(__FILE__));
        $command = "php runtests {$app} {$tests} {$mock}";
        print "running: {$command}\n";
        $result = system($command);
>>>>>>> 1f15a1274d4857142e3582997ccf247af099d107
    }
}

